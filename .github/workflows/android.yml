name: android

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_android.outputs.name }}

jobs:
  build_android:

    strategy:
      matrix:
        BUILD_TYPE: [Release]
        qt_arch: [android_arm64_v8a, android_x86_64]
        qt_version: [6.6.3]
        include:
          - BUILD_TYPE: Release
            qt_arch: android_arm64_v8a
            VCPKG_TARGET_TRIPLET: arm64-android
            ANDROID_ABI: arm64-v8a

          - BUILD_TYPE: Release
            qt_arch: android_x86_64 
            VCPKG_TARGET_TRIPLET: x64-android
            ANDROID_ABI: x86_64

    runs-on: ubuntu-latest

    env:
      Calendar_VERSION: v1.0.20
      VCPKGGITCOMMITID: 59aeb8fe8fe1c980de6bd5ba634cf21024522d81
      VCPKG_TARGET_TRIPLET: ${{matrix.VCPKG_TARGET_TRIPLET}}
      VCPKG_HOST_TRIPLET: x64-linux
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install
      STOREPASS: ${{secrets.STOREPASS}}
      artifact_name: build_android
      ANDROID_PLATFORM: android-23
      ANDROID_NATIVE_API_LEVEL: 23
      ANDROID_ABI: ${{matrix.ANDROID_ABI}}
      qt_modules: 'qtimageformats qtmultimedia qtscxml qtwebchannel qtwebsockets qtwebview'

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: make directory
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: Cache installed
        #if: false
        uses: actions/cache@v2
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: install_android_qt${{matrix.qt_version}}_${{matrix.qt_arch}}_${{matrix.BUILD_TYPE}}

      - name: run vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
          #setupOnly: # optional
          #vcpkgGitURL: https://github.com/KangLin/vcpkg.git
          vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/

      - name: Install Qt of gcc_64
        uses: jurplel/install-qt-action@v3
        with:
          dir: '${{env.TOOSL_DIR}}/qt' # optional
          version: '${{matrix.qt_version}}'
          #host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          set-env: false
          cache: true
          cache-key-prefix: cached_qt

      - name: Install Qt of android
        uses: jurplel/install-qt-action@v3
        with:
          # Directory to install Qt
          dir: '${{env.TOOSL_DIR}}/qt' # optional
          # Version of Qt to install
          version: '${{matrix.qt_version}}'
          # Host platform
          #host: linux # optional
          # Target platform for build
          target: 'android' # optional, default is desktop
          # Architecture for Windows/Android
          arch: '${{matrix.qt_arch}}' # optional
          # Additional Qt modules to install
          modules: '${{env.qt_modules}}' # optional. See: https://ddalcino.github.io/aqt-list-server/
          cache: true
          cache-key-prefix: cached_qt

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: build Calendar
        working-directory: ${{github.workspace}}/build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
          QT_ANDROID_KEYSTORE_PATH: ${{env.SOURCE_DIR}}/RabbitCommon/RabbitCommon.keystore
          QT_ANDROID_KEYSTORE_ALIAS: rabbitcommon
          QT_ANDROID_KEYSTORE_STORE_PASS: ${{secrets.STOREPASS}}
        run: |
          sudo chmod 777 ${Qt6_DIR}/bin/qt-cmake
          ${Qt6_DIR}/bin/qt-cmake .. \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
              -DQT_HOST_PATH=${Qt6_DIR}/../gcc_64 \
              -DQT_ANDROID_SIGN_APK=ON \
              -DQT_ENABLE_VERBOSE_DEPLOYMENT=OFF \
              -DQt6LinguistTools_DIR=${Qt6_DIR}/../gcc_64/lib/cmake/Qt6LinguistTools \
              -DCMAKE_INSTALL_PREFIX=`pwd`/install \
              -DVCPKG_VERBOSE=ON \
              -DCMAKE_TOOLCHAIN_FILE="${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake" \
              -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=${Qt6_DIR}/lib/cmake/Qt6/qt.toolchain.cmake \
              -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TARGET_TRIPLET}} \
              -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON \
              -DVCPKG_APPLOCAL_DEPS=ON \
              -DINSTALL_QT=ON
          cmake --build . --config ${{matrix.BUILD_TYPE}} --target all
          cmake --build . --config ${{matrix.BUILD_TYPE}} --target install
          APK_FILE=`find . -name "android-*.apk"`
          cp $APK_FILE Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk
#          7z a Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.zip install/*

      - name: Update configure file
        working-directory: ${{github.workspace}}/build
        run: |
          ${{env.SOURCE_DIR}}/RabbitCommon/Install/GenerateJsonFile.sh \
              update_${{matrix.qt_arch}}_${{matrix.qt_version}}.json \
              Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk \
              android ${{matrix.ANDROID_ABI}} \
              "https://github.com/KangLin/Calendar/releases/download/${{env.Calendar_VERSION}}/Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk,https://sourceforge.net/projects/rabbitcalendar/files/${{env.Calendar_VERSION}}/Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk"

      - name: Update xml file
        if: ${{ matrix.BUILD_TYPE == 'Release' && matrix.qt_arch == 'android_armv7' }}
        working-directory: ${{github.workspace}}/build
        run: |
          cp ${{github.workspace}}/Update/update_android.xml .
          MD5=`md5sum Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk | awk '{print $1}'`
          echo "MD5:${MD5}"
          sed -i "s/<VERSION>.*</<VERSION>${{env.Calendar_VERSION}}</g" update_android.xml
          sed -i "s/<INFO>.*</<INFO>Release Calendar ${{env.Calendar_VERSION}}</g" update_android.xml
          sed -i "s/<TIME>.*</<TIME>`date`</g" update_android.xml
          sed -i "s/<ARCHITECTURE>.*</<ARCHITECTURE>${{matrix.qt_arch}}</g" update_android.xml
          sed -i "s/<MD5SUM>.*</<MD5SUM>${MD5}</g" update_android.xml
          sed -i "s:<URL>.*<:<URL>https\://github.com/KangLin/Calendar/releases/download/${{env.Calendar_VERSION}}/Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk<:g" update_android.xml
          sed -i "s/<MIN_UPDATE_VERSION>.*</<MIN_UPDATE_VERSION>${{env.Calendar_VERSION}}</g" update_android.xml
      
      - name: Update artifact
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}_${{matrix.qt_version}}_${{matrix.qt_arch}}
          path: |
            ${{github.workspace}}/build/Calendar_${{env.Calendar_VERSION}}_${{matrix.qt_arch}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.apk
            ${{github.workspace}}/build/update_${{matrix.qt_arch}}_${{matrix.qt_version}}.json
            ${{github.workspace}}/build/update_android.xml
